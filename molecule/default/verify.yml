---
- name: Verify
  hosts: all
  gather_facts: false
  tasks:
    - name: Ensure Consul is installed
      stat:
        path: /usr/bin/consul
      register: result
      changed_when: false
      failed_when:
        - not (result.stat.isreg | d())
        - not (result.stat.executable | d())

- name: Verify servers
  hosts: consul_servers
  gather_facts: false
  tasks:
    - name: Ensure Consul is running
      service:
        name: consul-server
        state: started
      register: result
      check_mode: true
      failed_when: result is changed

#    - name: Allow Consul cluster time to form consensus
#      pause:
#        seconds: 5

    - name: Ensure Consul cluster is running
      # noqa risky-shell-pipe
      shell: consul info | grep -q 'members = 3'
      changed_when: false

- name: Verify clients
  hosts: consul_clients
  gather_facts: false
  tasks:
    - name: Ensure Consul client is running
      service:
        name: consul-client
        state: started
      register: result
      check_mode: true
      failed_when: result is changed

- name: Verify client1
  hosts: client1
  gather_facts: false
  tasks:
    - name: Check dpkg selection state
      dpkg_selections:
        name: consul
        selection: "{{ consul_package_dpkg_selection }}"
      check_mode: true
      register: result
      failed_when: result is changed

    - name: Check installed package version
      command: dpkg-query -f '${Version}' -W consul
      register: result
      failed_when: result.stdout != consul_package_version
      changed_when: false

    - name: Add a key/value entry to Consul
      community.general.consul_kv:
        key: "molecule/test/{{ key }}"
        value: "{{ value }}"
      register: result
      failed_when: result is not changed or (result['data']['Value']) != value
      vars:
        key: "{{ 99999 | random | string }}"
        value: "molecule"

    - name: Ensure skipped script check is not installed
      stat:
        path: /usr/local/share/consul/script-checks/test3
      register: result
      changed_when: false
      failed_when: result.stat.isreg | d()

    - name: Check Consul service statuses
      # noqa command-instead-of-module risky-shell-pipe
      shell: >
        curl -s http://localhost:8500/v1/health/checks/{{ item.service }} |
        jq .[0].Status
      register: result
      failed_when: result.stdout != item.status
      changed_when: false
      loop:
        - service: service-test1
          status: '"passing"'
        - service: service-test2
          status: '"critical"'
